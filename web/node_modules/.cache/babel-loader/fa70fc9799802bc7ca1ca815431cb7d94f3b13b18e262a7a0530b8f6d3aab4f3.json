{"ast":null,"code":"// src/services/api.js - API Service để gọi backend\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\nclass ApiService {\n  // Lấy tất cả thiết bị\n  static async getDevices() {\n    try {\n      const response = await fetch(`${API_URL}/devices`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching devices:', error);\n      throw error;\n    }\n  }\n\n  // Điều khiển LED\n  static async controlLED(state) {\n    try {\n      const response = await fetch(`${API_URL}/led`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          state\n        })\n      });\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error controlling LED:', error);\n      throw error;\n    }\n  }\n\n  // Điều khiển quạt\n  static async controlFan(state, speed = 255) {\n    try {\n      const response = await fetch(`${API_URL}/fan`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          state,\n          speed\n        })\n      });\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error controlling fan:', error);\n      throw error;\n    }\n  }\n\n  // Lấy trạng thái hệ thống\n  static async getSystemStatus() {\n    try {\n      const response = await fetch(`${API_URL}/status`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching system status:', error);\n      throw error;\n    }\n  }\n\n  // Lấy logs\n  static async getLogs(limit = 20) {\n    try {\n      const response = await fetch(`${API_URL}/logs?limit=${limit}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching logs:', error);\n      throw error;\n    }\n  }\n}\nexport default ApiService;","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","ApiService","getDevices","response","fetch","data","json","error","console","controlLED","state","method","headers","body","JSON","stringify","controlFan","speed","getSystemStatus","getLogs","limit"],"sources":["D:/TDMUniversity/Year4_Semester1/IOT/LT_IoT/CK/smart-home-project/web/src/services/api.js"],"sourcesContent":["// src/services/api.js - API Service để gọi backend\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\r\n\r\nclass ApiService {\r\n  // Lấy tất cả thiết bị\r\n  static async getDevices() {\r\n    try {\r\n      const response = await fetch(`${API_URL}/devices`);\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching devices:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Điều khiển LED\r\n  static async controlLED(state) {\r\n    try {\r\n      const response = await fetch(`${API_URL}/led`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ state }),\r\n      });\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error controlling LED:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Điều khiển quạt\r\n  static async controlFan(state, speed = 255) {\r\n    try {\r\n      const response = await fetch(`${API_URL}/fan`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ state, speed }),\r\n      });\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error controlling fan:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Lấy trạng thái hệ thống\r\n  static async getSystemStatus() {\r\n    try {\r\n      const response = await fetch(`${API_URL}/status`);\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching system status:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Lấy logs\r\n  static async getLogs(limit = 20) {\r\n    try {\r\n      const response = await fetch(`${API_URL}/logs?limit=${limit}`);\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching logs:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ApiService;\r\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,UAAU,CAAC;EACf;EACA,aAAaC,UAAUA,CAAA,EAAG;IACxB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,UAAU,CAAC;MAClD,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,aAAaE,UAAUA,CAACC,KAAK,EAAE;IAC7B,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,MAAM,EAAE;QAC7Cc,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEL;QAAM,CAAC;MAChC,CAAC,CAAC;MACF,MAAML,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,aAAaS,UAAUA,CAACN,KAAK,EAAEO,KAAK,GAAG,GAAG,EAAE;IAC1C,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,MAAM,EAAE;QAC7Cc,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEL,KAAK;UAAEO;QAAM,CAAC;MACvC,CAAC,CAAC;MACF,MAAMZ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,aAAaW,eAAeA,CAAA,EAAG;IAC7B,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,SAAS,CAAC;MACjD,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,aAAaY,OAAOA,CAACC,KAAK,GAAG,EAAE,EAAE;IAC/B,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,eAAeuB,KAAK,EAAE,CAAC;MAC9D,MAAMf,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF;AACF;AAEA,eAAeN,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}